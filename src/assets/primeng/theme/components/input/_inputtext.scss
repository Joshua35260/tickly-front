.input-with-external-left-icon {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: $input-left-icon-gap;
  & > i {
    min-width: 32px;
    color: $primaryColor;
    font-size: 32px;
  }
  app-input {
    flex: 1;
  }
}

// ***************** //
// custom inputText with icon //
// **************** //
.input-with-icon-left .p-inputtext  {
  padding-left: 2.8rem!important;
}

.input-with-icon-left  .p-float-label > label {
  left: 2.8rem;
}


// ***************** //
// default input theme //
// **************** //
.p-inputtext {
  @include text-input();
  @include md {
    font-size: 14px;
  }
  @include sm {
    font-size: 14px;
  }
  box-shadow: var(--box-shadow-input);
  &:enabled:hover {
    border-color: $inputHoverBorderColor;
  }

  &:enabled:focus {
    @include focused-input();
  }

  &.ng-dirty.ng-invalid {
    @include invalid-input();

    &+small {
      color: $errorColor
    }

    &+label+small {
      color: $errorColor
    }
  }

  &.p-inputtext-sm {
    @include scaledFontSize($inputTextFontSize, $scaleSM);
    @include scaledPadding($inputPadding, $scaleSM);
  }

  &.p-inputtext-lg {
    @include scaledFontSize($inputTextFontSize, $scaleLG);
    @include scaledPadding($inputPadding, $scaleLG);
  }
  
}

// TEXTAREA

.p-float-label > textarea {
  max-height: 70vh;
  min-height: 120px;// property row from text area of prime ng is bugged actually, we have to set min height here
  overflow-y: auto!important;//we have to search why we have hidden by default
}
// END OF TEXT AREA


.p-float-label > .p-inputtext:focus ~ label, 
.p-inputtext.not-empty ~ label {//! not-empty class is given by app-input component !
    top: 12px; /* Position du label lorsqu'il est flottant */
    font-style: italic;
    font-size: 14px;
    font-weight: 300;

    @include md {
        font-size: 12px;
        top: 9px;
    }

    @include sm {
        font-size: 12px;
        top: 9px;
    }
}


.p-float-label > label {
    z-index: 1;
    left: nth($inputPadding, 2);
    right: 43px;
    white-space: nowrap;
    color: $inputPlaceholderTextColor;
    transition-duration: $transitionDuration;
    top: 22px;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 16px;

    @include md {
        font-size: 13px;
        top: 20px;
    }

    @include sm {
        font-size: 13px;
        top: 20px;
    }
}

.p-float-label {
  >label {
    z-index: 1;
    left: nth($inputPadding, 2);
    right: 43px;
    white-space: nowrap;
    color: $inputPlaceholderTextColor;
    transition-duration: $transitionDuration;
    top: 22px;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 16px;
    @include md {
      font-size: 13px;
      top: 20px;
    }
    @include sm {
      font-size: 13px;
      top: 20px;
    }
  }
  >.ng-invalid.ng-dirty+label {
    color: $inputErrorBorderColor;
  }
  .p-dropdown {
    .p-inputtext {
      padding: 16px 13px 4px 13px;
      @include md {
        padding: 12px 9px 4px 9px;
      }
      @include sm {
        padding: 12px 9px 4px 9px;
      }
    }
  }


  .p-inputtext {
    padding: 20px 13px 4px 13px;
  
    @include md {
      padding: 12px 9px 4px 9px;
    }
    
    @include sm {
      padding: 12px 9px 4px 9px;
    }
  }

}

.p-input-icon-left, .p-input-icon-right {

  >.p-icon-wrapper.p-icon,
  >i:first-of-type {
    left: nth($inputPadding, 2);
    color: $inputIconColor;
    font-size: 25px;
    margin-top: -0.75rem;
  }
}

.p-input-icon-left {

  >.p-icon-wrapper.p-icon,
  >i:first-of-type {
    left: 6px;
    color: $primaryColor;
  }

  .p-inputtext {
    padding-left: nth($inputPadding, 2) * 2 + $primeIconFontSize;
  }

  small {
    left: nth($inputPadding, 2) * 2 + $primeIconFontSize;
  }

  &.p-float-label > label {
    left: nth($inputPadding, 2) * 2 + $primeIconFontSize;
  }

}


.p-input-icon-right>.p-icon-wrapper,
.p-input-icon-right>i:last-of-type {
  right: nth($inputPadding, 2);
  color: $inputIconColor;
}

.p-input-icon-right>.p-inputtext {
  padding-right: nth($inputPadding, 2) * 2 + $primeIconFontSize;
}

@include placeholder {
  color: $inputPlaceholderTextColor
}

;

.p-input-filled {
  .p-inputtext {
    background-color: $inputFilledBg;

    &:enabled:hover {
      background-color: $inputFilledHoverBg;
    }

    &:enabled:focus {
      background-color: $inputFilledFocusBg;
    }
  }
}

.p-inputtext-sm {
  .p-inputtext {
    @include scaledFontSize($inputTextFontSize, $scaleSM);
    @include scaledPadding($inputPadding, $scaleSM);
  }
}

.p-inputtext-lg {
  .p-inputtext {
    @include scaledFontSize($inputTextFontSize, $scaleLG);
    @include scaledPadding($inputPadding, $scaleLG);
  }
}


.search-form {
    .p-inputtext{
        box-shadow: none;
        &:enabled:focus {
            box-shadow: none;
        }
    }
    .p-input-icon-left {
        width: 100%;
        padding-left: 60px;
        .p-inputtext{
            width: 100%;
            padding-right: 80px;
        }
        > i{
            font-size: 36px;
            margin-top: -17px;
            left: 20px;
        }
    }
}

.input-icon-left {
  position: relative;
  display: block;

    i {
    position: absolute;
    left: 10px;
    top:10px;
    z-index: 1;
    font-size: 28px;
    @include md {
      font-size: 20px;
      top:8px;
    }
    @include sm {
      font-size: 10px;
      top:6px;
    }
  }

}

.input-icon-right {
  position: relative;
  display: block;

  .input-with-icon-right {
    width: 100%;
    margin-bottom: 10px;
  }

  [class^='icon-'] {
    position: absolute;
    right: 10px;
    top:15px;
    z-index: 1;
    font-size: 28px;
  }
}
