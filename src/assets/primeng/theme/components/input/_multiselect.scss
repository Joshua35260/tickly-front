@use 'sass:math';

.p-multiselect {
  width: 100%;
  @include text-input();
  padding: 0;

  &:not(.p-disabled):hover {
    border-color: $inputHoverBorderColor;
  }

  .p-multiselect-label-container {

    @include md {
      padding: 0;
    }

    @include sm {
      padding: 0;
    }

    .p-multiselect-label {
      display: flex;
      padding: 4px 0 15px 0;
      transition: $formElementTransition;

      &.p-placeholder {
        color: $inputPlaceholderTextColor;
        
      }
    }
  }


  &.p-multiselect-chip {
    @include md {
      height: 36px;
    }

    @include sm {
      height: 36px;
    }

    .p-multiselect-label-container {
      padding: 2px 4px;

      @include md {
        padding: 0;
      }

      @include sm {
        padding: 0;
      }
      
      .p-multiselect-label {
        gap: $inlineSpacing;
      }

    }

    //multi select style when filled
    .p-inputwrapper-filled  &.p-multiselect-chip .p-multiselect-label-container{
      padding: 20px 10px 0 10px;
      @include md {
        padding: 0;
      }
      @include sm {
        padding: 0;
      }
    }
    .p-multiselect-token {
      padding: 1px 8px;
      font-size: 15px;
      display: flex;
      gap: 6px;
      @include md {
        font-size: 14px;
      }

      @include sm {
        font-size: 14px;
      }

      background: $shade900;
      color: white;
      border-radius: $borderRadius;

      .p-chips-token-icon {
        margin-left: $inlineSpacing;
      }
    }
  }

  .p-multiselect-trigger {
    background: transparent;
    color: $inputIconColor;
    width: $inputGroupAddOnMinWidth;
    border-top-right-radius: $borderRadius;
    border-bottom-right-radius: $borderRadius;
  }
}

.p-inputwrapper-filled {
  .p-multiselect {
    &.p-multiselect-chip {
        height: fit-content;

      .p-multiselect-label {
        // padding: 12px nth($inputPadding, 2) 2px;

        @include md {
          padding: 20px 4px 6px 4px;
        }

        @include sm {
          padding: 20px 4px 6px 4px;
        }
      }
    }
  }
}

.p-multiselect-panel {
  background: $inputOverlayBg;
  color: $inputListTextColor;
  border: $inputOverlayBorder;
  border-radius: $borderRadius;
  box-shadow: $inputOverlayShadow;

  .p-multiselect-header {
    padding: $inputListHeaderPadding;
    border-bottom: $inputListHeaderBorder;
    color: $inputListHeaderTextColor;
    background: $inputOverlayHeaderBg;
    margin: $inputListHeaderMargin;
    border-top-right-radius: $borderRadius;
    border-top-left-radius: $borderRadius;

    .p-multiselect-filter-container {
      .p-inputtext {
        padding-right: nth($inputPadding, 2) + $primeIconFontSize;
      }

      .p-multiselect-filter-icon {
        right: nth($inputPadding, 2);
        color: $inputIconColor;
      }
    }

    .p-checkbox {
      margin-right: $inlineSpacing;
    }

    .p-multiselect-close {
      margin-left: $inlineSpacing;
      @include action-icon();
    }
  }

  .p-multiselect-items {
    padding: $inputListPadding;

    .p-multiselect-item {
      margin: $inputListItemMargin;
      padding: $inputListItemPadding;
      border: $inputListItemBorder;
      color: $inputListItemTextColor;
      background: $inputListItemBg;
      transition: $listItemTransition;
      border-radius: $inputListItemBorderRadius;

      &.p-highlight {
        color: $highlightTextColor;
        background: $highlightBg;
      }

      &:not(.p-highlight):not(.p-disabled):hover {
        color: $inputListItemTextHoverColor;
        background: $inputListItemHoverBg;
      }

      &:focus {
        @include focused-listitem();
      }

      .p-checkbox {
        margin-right: $inlineSpacing;
      }
    }


    .p-multiselect-item-group {
      margin: $submenuHeaderMargin;
      padding: $submenuHeaderPadding;
      color: $submenuHeaderTextColor;
      background: $submenuHeaderBg;
      font-weight: $submenuHeaderFontWeight;
    }

    .p-multiselect-empty-message {
      padding: $inputListItemPadding;
      color: $inputListItemTextColor;
      background: $inputListItemBg;
    }
  }
}

p-multiselect.ng-dirty.ng-invalid>.p-multiselect {
  @include invalid-input();
}

.p-input-filled {
  .p-multiselect {
    background: $inputFilledBg;

    &:not(.p-disabled):hover {
      background-color: $inputFilledHoverBg;
    }

    &:not(.p-disabled).p-focus {
      background-color: $inputFilledFocusBg;
    }
  }
}

p-multiselect.p-multiselect-clearable {
  .p-multiselect-label-container {
    padding-right: nth($inputPadding, 2) + $primeIconFontSize;
  }

  .p-multiselect-clear-icon {
    margin-top: 0px;
  }
}