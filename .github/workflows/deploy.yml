name: CI/CD for Frontend

on:
  push:
    branches:
      - main  # Déclenche le workflow sur les pushes à la branche principale

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Récupérer le code source depuis le dépôt
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape 2: Construire l'image Docker pour le frontend
      - name: Build Docker image
        run: |
         docker build -t ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest -f .github/workflows/Dockerfile .

      # Étape 3: Se connecter à Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Étape 4: Pousser l'image Docker sur Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest

      # Étape 5: Configurer la clé SSH pour accéder au VPS
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # Étape 6: Déployer sur le VPS
      - name: Deploy to VPS
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
        run: |
          echo "Deploying Docker container on VPS..."

          # Se connecter au VPS et puller la dernière image depuis Docker Hub
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "docker pull ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest"

          # Stopper et supprimer tout ancien container frontend
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "docker stop tickly-frontend || true && docker rm tickly-frontend || true"

          # Démarrer un nouveau container avec la nouvelle image
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "docker run -d --name tickly-frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest"

      # Étape 7: Vérifier l'état du container Caddy sur le VPS
      - name: Check Docker container status
        env:
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
        run: |
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "docker ps | grep tickly-frontend"
