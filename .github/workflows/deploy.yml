name: CI/CD for Frontend

on:
  push:
    branches:
      - main  # Déclenche le workflow sur les pushes à la branche principale

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Récupérer le code source depuis le dépôt
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape 2: Construire l'image Docker pour le frontend
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest -f .github/workflows/Dockerfile .

      # Étape 3: Se connecter à Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Étape 4: Pousser l'image Docker sur Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest

      # Étape 5: Installer sshpass
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      # Étape 6: Configurer la clé SSH pour accéder au VPS
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # Étape 7: Déployer sur le VPS
      - name: Deploy to VPS
        run: |
          echo "Deploying Docker container on VPS..."

          # Se connecter au VPS et puller la dernière image depuis Docker Hub
          ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest

            # Stopper et supprimer tout ancien container frontend
            docker stop tickly-frontend || true && docker rm tickly-frontend || true

            # Démarrer un nouveau container avec la nouvelle image
            docker run -d --name tickly-frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/tickly-frontend:latest
          EOF

      # Étape 8: Vérifier l'état du container sur le VPS
      - name: Check Docker container status
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} "docker ps | grep tickly-frontend"
